$(document).ready(function () {
    // Handle Add to Cart, Wishlist and Compare 
    $(document).on('click', '.add-item', function () {
        const button = $(this);
        const actionName = button.data('action-name');
        const productId = button.data('product-id');
        const quantity = button.data('quantity');
        const productVariantId = button.data('product-variant-id');

        $.ajax({
            url: itemActionStoreUrl, // Use a global variable instead of Blade syntax
            type: 'POST',
            data: {
                action_name: actionName,
                product_id: productId,
                quantity: quantity,
                product_variant_id: productVariantId,
                _token: csrfToken // Use a global variable for CSRF token
            },
            success: function (response) {
                // Call Wishlist Page
                if (response.message.includes('Added') & quantity) {
                    button.text('Remove From Cart');
                } else if (response.message.includes('Removed') & quantity) {
                    button.text('Add To Cart');
                }
                // Call Shop Page
                button.toggleClass('bg-dark text-white', response.message.includes('Added'));
                // Count Cart OR Wishlist
                $('#wishlist-count').text(response.count_wishlist || $('#wishlist-count').text());
                $('#cart-count').text(response.count_cart || $('#cart-count').text());
            },
            error: function (xhr) {
                switch (xhr.status) {
                    case 401: // User not authenticated
                        window.location.href = loginUrl; // Use a global variable for login URL
                        break;
                    case 404:
                        alert('Product not found.');
                        break;
                    default:
                        alert('An error occurred. Please try again.');
                }
            }
        });
    });
});


$(document).ready(function () {
    $(document).on('click', '.remove-item', function () {
        var itemId = $(this).data('id');
        var actionName = $(this).data('action-name');
        var csrfToken = $('meta[name="csrf-token"]').attr('content');
        var currentValue = parseInt($("#" + actionName + "-count").text(), 10);

        $.ajax({
            url: itemActionRemoveUrl,  // Ensure this global variable is set in Blade
            type: "POST",  // Use POST instead of DELETE
            data: {
                id: itemId,
                action_name: actionName,
                _token: csrfToken,
                _method: "DELETE"
            },
            success: function (response) {
                if(response){
                    $(".remove" + itemId).hide(); // current (row/item) hide
                    $("#" + actionName + "-count").text(currentValue - 1);
                }
            },
            error: function (xhr, status, error) {
                console.error("AJAX Error:", xhr.responseText);
                alert("An error occurred while removing the item. Please try again.");
            }
        });
    });
});


/** ________________________________________________________________________
 * ADD ITEM         =>>> (.add-item)
 * REMOVE ITEM      =>>> (.remove-item)
 * REMOVE ITEM BOX  =>>> (.remove${item.id}) Using this class to wrapper in item
 * 
 * var csrfToken = '{{ csrf_token() }}';
 * var loginUrl = '{{ route('login') }}';
 * var itemActionStoreUrl = '{{ route('item-action.store') }}';
 * var itemActionRemoveUrl = '{{ route('item-action.remove') }}';
 */
